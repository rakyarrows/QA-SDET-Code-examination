<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="11323" started-at="2018-02-21T00:14:53Z" finished-at="2018-02-21T00:15:04Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="11323" started-at="2018-02-21T00:14:53Z" finished-at="2018-02-21T00:15:04Z">
      <class name="testcases.funtional">
        <test-method status="FAIL" signature="Largest_City_And_Capital()[pri:1, instance:testcases.funtional@5419f379]" name="Largest_City_And_Capital" duration-ms="10724" started-at="2018-02-20T18:14:53Z" finished-at="2018-02-20T18:15:04Z">
          <exception class="com.jayway.jsonpath.PathNotFoundException">
            <message>
              <![CDATA[Expected to find an object with property ['RestResponse'] in path $ but found 'java.lang.String'. This is not a json object according to the JsonProvider: 'com.jayway.jsonpath.spi.json.JsonSmartJsonProvider'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.jayway.jsonpath.PathNotFoundException: Expected to find an object with property ['RestResponse'] in path $ but found 'java.lang.String'. This is not a json object according to the JsonProvider: 'com.jayway.jsonpath.spi.json.JsonSmartJsonProvider'.
	at com.jayway.jsonpath.internal.path.PropertyPathToken.evaluate(PropertyPathToken.java:71)
	at com.jayway.jsonpath.internal.path.RootPathToken.evaluate(RootPathToken.java:62)
	at com.jayway.jsonpath.internal.path.CompiledPath.evaluate(CompiledPath.java:53)
	at com.jayway.jsonpath.internal.path.CompiledPath.evaluate(CompiledPath.java:61)
	at com.jayway.jsonpath.JsonPath.read(JsonPath.java:187)
	at com.jayway.jsonpath.JsonPath.read(JsonPath.java:345)
	at com.jayway.jsonpath.JsonPath.read(JsonPath.java:329)
	at framework.RestFuntions.JsonPath(RestFuntions.java:27)
	at testcases.funtional.Largest_City_And_Capital(funtional.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- com.jayway.jsonpath.PathNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Largest_City_And_Capital -->
        <test-method status="PASS" signature="InvalidInput()[pri:2, instance:testcases.funtional@5419f379]" name="InvalidInput" duration-ms="526" started-at="2018-02-20T18:15:04Z" finished-at="2018-02-20T18:15:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidInput -->
      </class> <!-- testcases.funtional -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
